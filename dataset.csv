bibkey,title,authors,year,Software Vulnerability Target,Techniques Used,Target Software Category,Target Type,New Vulnerabilities Discovered,Evaluation Method,Tool Availability,Automation Level,Open Source,Specific Software Vulnerability Target,Specific Techniques Used,Specific Evaluation Method
7335070,SMT-constrained symbolic execution engine for integer overflow detection in C code,P. Muntean and M. Rahman and A. Ibing and C. Eckert,2015,Incorrect Calculation,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Integer overflow,"",Experiment
4290988,A Static Analysis Framework For Detecting SQL Injection Vulnerabilities,X. Fu and X. Lu and B. Peltsverger and S. Chen and K. Qian and L. Tao,2007,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Formal,Tool Implemented and Published,Automatic,Yes,SQL injection,"",Proof
4637549,Automated Detection of Code Vulnerabilities Based on Program Analysis and Model Checking,L. Wang and Q. Zhang and P. Zhao,2008,Protection Mechanism Failure,Hybrid,Generic,Source Code,No,Empirical,Tool Implemented and Published,Automatic,Yes,Buffer overflow,"Constraint-based analysis, model checking",Empirical Study
6175814,Automated vulnerability detection for compiled smart grid software,S. J. Prowell and M. Pleszkoch and K. D. Sayre and R. C. Linger,2012,Multiple,Static Analysis,Generic,Compiled Code,No,None,No Tool Implemented,Automatic,No,Not specified,"",""
5611490,Effective and Efficient Memory Protection Using Dynamic Tainting,I. Doudalis and J. Clause and G. Venkataramani and M. Prvulovic and A. Orso,2012,Protection Mechanism Failure,Dynamic Analysis,Generic,Compiled Code,No,Empirical,No Tool Implemented,Automatic,No,Illegal memory access,"",Empirical Study
antunes2009effective,Effective detection of SQL/XPath injection vulnerabilities in web services,"Antunes, Nuno and Laranjeiro, Nuno and Vieira, Marco and Madeira, Henrique",2009,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,No,Empirical,No Tool Implemented,Automatic,No,SQL injection,"",Experiment
5234322,Detecting SQL Injection Vulnerabilities in Web Services,N. Antunes and M. Vieira,2009,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,No,Empirical,No Tool Implemented,Automatic,No,SQL Injection,"",Experiment
Wassermann:2008:SDC:1368088.1368112,Static Detection of Cross-site Scripting Vulnerabilities,Gary Wassermann and Zhendong Su,2008,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,"",Empirical Study
PAP684,Least privilege analysis in software architectures,Koen Buyens and Riccardo Scandariato,2013,Protection Mechanism Failure,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Semi-automatic,No,Permission vulnerability,"",Case Study
7049035,Vulnerability identification and classification via text mining bug databases,D. Wijayasekara and M. Manic and M. McQueen,2014,Multiple,Other,Generic,Source Code,No,Empirical,No Tool Implemented,Automatic,No,Not specified,Text mining,Empirical Study
Avots:2005:ISS:1062455.1062520,Improving Software Security with a C Pointer Analysis,Dzintars Avots and Michael Dalton and V. Benjamin Livshits and Monica S. Lam,2005,Protection Mechanism Failure,Static Analysis,Generic,Source Code,Yes,Empirical,No Tool Implemented,Automatic,No,"Buffer overflow, format string vulnerabilities","",Empirical Study
5438043,Configuration Fuzzing for Software Vulnerability Detection,H. Dai and C. Murphy and G. Kaiser,2010,Multiple,Dynamic Analysis,Desktop Applications,Compiled Code,No,Empirical,No Tool Implemented,Automatic,No,Not specified,"",Case Study
7056832,Online Taint Propagation Analysis with Precise Pointer-to Analysis for Detecting Bugs in Binaries,G. Li and Y. Zhang and S. X. Wang and Kailu,2014,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,No Tool Implemented,Automatic,No,Illegal memory access,"",Experiment
6703400,Software vulnerability detection using genetic algorithm and dynamic taint analysis,B. Shuai and M. Li and H. Li and Q. Zhang and C. Tang,2013,Multiple,Hybrid,Generic,Source Code,No,Empirical,No Tool Implemented,Automatic,No,Not specified,,Experiment
Thome:2014:SST:2593833.2593835,Search-based Security Testing of Web Applications,Julian Thom\'{e} and Alessandra Gorla and Andreas Zeller,2014,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,SQL injection,"",Empirical Study
7475225,A component based SQL injection vulnerability detection tool,M. S. Aliero and I. Ghani,2015,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,SQL injection,"",Empirical Study
Chin:2011:AIC:1999995.2000018,Analyzing Inter-application Communication in Android,Erika Chin and Adrienne Porter Felt and Kate Greenwood and David Wagner,2011,Protection Mechanism Failure,Dynamic Analysis,Mobile Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Inter-app communication vulnerabilities,"",Empirical Study
PAP8,Automata-based symbolic string analysis for vulnerability detection,Fang Yu and Muath Alkhalaf and Tevfik Bultan,2014,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Improper Input Validation,"",Empirical Study
godefroid2008automated,Automated Whitebox Fuzz Testing.,"Godefroid, Patrice and Levin, Michael Y and Molnar, David A and others",2008,Protection Mechanism Failure,Dynamic Analysis,Desktop Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Improper Input Validation,"",Experiment
saxena2011scriptgard,SCRIPTGARD: automatic context-sensitive sanitization for large-scale legacy web applications,"Saxena, Prateek and Molnar, David and Livshits, Benjamin",2011,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,Improper Input Validation,"",Empirical Study
yu2011patching,Patching vulnerabilities with sanitization synthesis,"Yu, Fang and Alkhalaf, Muath and Bultan, Tevfik",2011,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,No Tool Implemented,Automatic,No,SQL injection,"",Experiment
6258307,Finding Buffer Overflow Inducing Loops in Binary Executables,S. Rawat and L. Mounier,2012,Protection Mechanism Failure,Static Analysis,Desktop Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Empirical Study
Monga:2009:HAF:1656360.1656378,A Hybrid Analysis Framework for Detecting Web Application Vulnerabilities,M. Monga and R. Paleari and E. Passerini,2009,Protection Mechanism Failure,Hybrid,Web Applications,Compiled Code,No,Formal,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,Static and dynamic analysis,Proof
SEC:SEC747,Static detection of logic vulnerabilities in Java web applications,Zhejun Fang and Yuqing Zhang and Ying Kong and Qixu Liu,2014,Insufficient Control Flow Management,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Logic vulnerability,"",Empirical Study
balduzzi2011automated,Automated Discovery of Parameter Pollution Vulnerabilities in Web Applications.,"Balduzzi, Marco and Gimenez, Carmen Torrano and Balzarotti, Davide and Kirda, Engin",2011,Multiple,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,New category of vulnerability: HTTP Parameter Pollution (HPP,"",Experiment
neves2006using,Using attack injection to discover new vulnerabilities,"Neves, Nuno and Antunes, Joao and Correia, Miguel and Verissimo, Paulo and Neves, Rui",2006,Multiple,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Experiment
6263139,A free and extensible tool to detect vulnerabilities in Web systems,D. Rocha and D. Kreutz and R. Turchetti,2012,Multiple,Dynamic Analysis,Web Applications,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,Yes,"Vulnerability types: LFI, RFI, RCE","",Empirical Study
Le:2008:MDP:1453101.1453137,Marple: A Demand-driven Path-sensitive Buffer Overflow Detector,Wei Le and Mary Lou Soffa,2008,Protection Mechanism Failure,Static Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Experiment
7273432,Detecting SQL Vulnerability Attack Based on the Dynamic and Static Analysis Technology,Y. Wang and D. Wang and W. Zhao and Y. Liu,2015,Protection Mechanism Failure,Hybrid,Web Applications,Source Code,No,Empirical,No Tool Implemented,Automatic,No,SQL injection,Static and dynamic analysis,Experiment
guarnieri2011security,Security vulnerabilities detection and protection using Eclipse,"Guarnieri, Marco and El Khoury, Paul and Serme, Gabriel and Idrees, Muhammad Sabir and Roudier, Yves and De Oliveira, Santana Anderson and Grall, Herve and Sudholt, Mario",2011,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,None,Tool Implemented but Not Published,Automatic,No,"SQL injection, Cross-site scripting","",""
chin2013bifocals,Bifocals: Analyzing webview vulnerabilities in android applications,"Chin, Erika and Wagner, David",2013,Multiple,Dynamic Analysis,Mobile Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,"Two vulnerability types: Excess authorization, File-based cross-zone scripting","",Empirical Study
972661,A case study in detecting software security vulnerabilities using constraint optimization,M. Weber and V. Shah and C. Ren,2001,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Case Study
5958225,A combinatorial approach to detecting buffer overflow vulnerabilities,W. Wang and Y. Lei and D. Liu and D. Kung and C. Csallner and D. Zhang and R. Kacker and R. Kuhn,2011,Protection Mechanism Failure,Dynamic Analysis,Desktop Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Empirical Study
6844337,A Dynamic Detection Method to C/C++ Programs Memory Vulnerabilities Based on Pointer Analysis,R. Ma and L. Chen and C. Hu and J. Xue and X. Zhao,2013,Protection Mechanism Failure,Dynamic Analysis,Desktop Applications,Source Code,No,Empirical,No Tool Implemented,Automatic,No,Buffer overflow,"",Experiment
7098023,ConDroid: Targeted Dynamic Analysis of Android Applications,"J. Sch\""{u}tte and R. Fedler and D. Titze",2015,Multiple,Dynamic Analysis,Mobile Applications,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,No,Dynamic code loading vulnerabilities,"",Empirical Study
7009438,Improving guide-based vulnerability detection with hybrid symbolic execution,Y. Ouyang and S. Zeng and C. Yang and Q. Wang,2014,Multiple,Hybrid,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Dynamic and static symbolic execution,Experiment
bandhakavi2010vex,VEX: Vetting Browser Extensions for Security Vulnerabilities.,"Bandhakavi, Sruthi and King, Samuel T and Madhusudan, Parthasarathy and Winslett, Marianne",2010,Multiple,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Web browser extensions' vulnerabilities,"",Empirical Study
newsome2005dynamic,"Dynamic taint analysis for automatic detection, analysis, and signature generation of exploits on commodity software","Newsome, James and Song, Dawn",2005,Multiple,Dynamic Analysis,Generic,Compiled Code,No,Empirical,No Tool Implemented,Automatic,No,Overwrite attacks,"",Empirical Study
parameshwaran2015auto,Auto-patching DOM-based XSS at scale,"Parameshwaran, Inian and Budianto, Enrico and Shinde, Shweta and Dang, Hung and Sadhu, Atul and Saxena, Prateek",2015,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,No Tool Implemented,Automatic,No,Cross-site scripting,"",Empirical Study
shahriar2008mutation,Mutation-based testing of buffer overflow vulnerabilities,"Shahriar, Hossain and Zulkernine, Mohammad",2008,Protection Mechanism Failure,Dynamic Analysis,Desktop Applications,Compiled Code,No,Empirical,No Tool Implemented,Automatic,No,Buffer overflow,"",Empirical Study
kieyzun2009automatic,Automatic creation of SQL injection and cross-site scripting attacks,"Kieyzun, Adam and Guo, Philip J and Jayaraman, Karthick and Ernst, Michael D",2009,Protection Mechanism Failure,Other,Web Applications,Compiled Code,No,Empirical,No Tool Implemented,Automatic,No,"SQL injection, cross-site scripting",Not specified,Empirical Study
6805427,Towards a Hybrid Framework for Detecting Input Manipulation Vulnerabilities,S. Ding and H. B. K. Tan and L. K. Shar and B. M. Padmanabhuni,2013,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,"SQL injection, cross-site scripting, buffer overflow","",Empirical Study
1624016,Pixy: a static analysis tool for detecting Web application vulnerabilities,N. Jovanovic and C. Kruegel and E. Kirda,2006,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,Yes,"SQL injection, cross-site scripting, command injection","",Empirical Study
6120814,LoongChecker: Practical Summary-Based Semi-simulation to Detect Vulnerability in Binary Code,S. Cheng and J. Yang and J. Wang and J. Wang and F. Jiang,2011,Multiple,Static Analysis,Desktop Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Empirical Study
PAP518,The use of dynamic analysis for generation of input data that demonstrates critical bugs and vulnerabilities in programs,I. K. Isaev,2010,Multiple,Dynamic Analysis,Desktop Applications,Compiled Code,Yes,Formal,Tool Implemented and Published,Automatic,No,Not specified,"",Proof
shahriar2008music,MUSIC: Mutation-based SQL injection vulnerability checking,"Shahriar, Hossain and Zulkernine, Mohammad",2008,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,SQL injection,"",Empirical Study
dessiatnikoff2011clustering,A clustering approach for web vulnerabilities detection,"Dessiatnikoff, Anthony and Akrout, Rim and Alata, Eric and Ka{\^a}niche, Mohamed and Nicomette, Vincent",2011,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,No,Empirical,No Tool Implemented,Automatic,No,SQL injection,"",Experiment
del2005improving,Improving network applications security: a new heuristic to generate stress testing data,"Del Grosso, Concettina and Antoniol, Giuliano and Di Penta, Massimiliano and Galinier, Philippe and Merlo, Ettore",2005,Protection Mechanism Failure,Static Analysis,Generic,Source Code,No,Empirical,No Tool Implemented,Automatic,No,Buffer overflow,"",Empirical Study
sparks2007automated,Automated vulnerability analysis: Leveraging control flow for evolutionary input crafting,"Sparks, Sherri and Embleton, Shawn and Cunningham, Ryan and Zou, Cliff",2007,Multiple,Dynamic Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Fuzzing,Empirical Study
6571711,CRAXweb: Automatic Web Application Testing and Attack Generation,S. K. Huang and H. L. Lu and W. M. Leong and H. Liu,2013,Improper Adherence to Coding Standards,Dynamic Analysis,Web Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,"SQL injection, cross-site scripting","",Empirical Study
PAP476,Static vulnerability detection in Java service-oriented components,Fran\c{c}ois Goichon and Guillaume Salagnac and Pierre Parrend,2013,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,Not specified,"",Empirical Study
7489875,Statically detect invalid pointer dereference vulnerabilities in binary software,Bin Zhang and Bo Wu and Chao Feng and Xing Zhang and Chaojing Tang,2015,Multiple,Static Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Vulnerability: invalid pointer dereference,"",Empirical Study
wassermann2004analysis,An analysis framework for security in web applications,"Wassermann, Gary and Su, Zhendong",2004,Protection Mechanism Failure,Static Analysis,Generic,Source Code,No,None,Tool Implemented but Not Published,Automatic,No,SQL injection,"",""
6759201,"Patcher: An Online Service for Detecting, Viewing and Patching Web Application Vulnerabilities",F. Yu and Y. Y. Tung,2014,Multiple,Static Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Not specified,"",Empirical Study
xu2008testing,Testing for buffer overflows with length abstraction,"Xu, Ru-Gang and Godefroid, Patrice and Majumdar, Rupak",2008,Protection Mechanism Failure,Static Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Buffer overflow,"",Experiment
PAP14,An analysis on secure coding using symbolic execution engine,Joon-Ho Kim and Myung-Chul Ma,2016,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Semi-automatic,No,Not specified,"",Empirical Study
6649829,A Dynamic SQL Injection Vulnerability Test Case Generation Model Based on the Multiple Phases Detection Approach,L. Lei and X. Jing and L. Minglei and Y. Jufeng,2013,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,SQL injection,"",Experiment
Kemalis:2008:SSA:1363686.1364201,SQL-IDS: A Specification-based Approach for SQL-injection Detection,Konstantinos Kemalis and Theodores Tzouramanis,2008,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,SQL injection,"",Experiment
6041609,Program Slicing Stored XSS Bugs in Web Application,Y. Wang and Z. Li and T. Guo,2011,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,No Tool Implemented,Automatic,No,Cross-site scripting,"",Empirical Study
pan2013efficient,Efficient Model-based Fuzz Testing Using Higher-order Attribute Grammars.,"Pan, Fan and Hou, Ying and Hong, Zheng and Wu, Lifa and Lai, Haiguang",2013,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Experiment
6605772,Heuristic Path Pruning Algorithm Based on Error Handling Pattern Recognition in Detecting Vulnerability,D. Chen and Y. Zhang and L. Cheng and Y. Deng and X. Sun,2013,Multiple,Static Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Not specified,"",Experiment
4021980,Monitoring the Security Health of Software Systems,A. Aggarwal and P. Jalote,2006,Protection Mechanism Failure,Dynamic Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented but Not Published,Semi-automatic,No,Buffer overflow,"",Experiment
6933551,Automatic software vulnerability detection based on guided deep fuzzing,J. Cai and S. Yang and J. Men and J. He,2014,Protection Mechanism Failure,Hybrid,Generic,Source Code,No,None,Tool Implemented and Published,Automatic,No,Improper Input Validation,"Fuzzing, symbolic execution, taint analysis",""
demott2011towards,Towards an automatic exploit pipeline,"DeMott, Jared D and Enbody, Richard J and Punch, William F",2011,Multiple,Dynamic Analysis,Desktop Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Semi-automatic,No,Not specified,Fuzzing,Empirical Study
Dor:2003:CTR:780822.781149,CSSV: Towards a Realistic Tool for Statically Detecting All Buffer Overflows in C,Nurit Dor and Michael Rodeh and Mooly Sagiv,2003,Protection Mechanism Failure,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,Buffer overflow,"",Empirical Study
Doupe:2011:FED:2046707.2046736,Fear the EAR: Discovering and Mitigating Execution After Redirect Vulnerabilities,Adam Doup\'{e} and Bryce Boe and Christopher Kruegel and Giovanni Vigna,2011,Multiple,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented and Published,Automatic,Yes,Vulnerability: Execution After Redirect,"",Empirical Study
ruwase2004practical,A Practical Dynamic Buffer Overflow Detector.,"Ruwase, Olatunji and Lam, Monica S",2004,Protection Mechanism Failure,Dynamic Analysis,Desktop Applications,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,Buffer overflow,"",Empirical Study
wang2008precisely,Precisely Detecting Buffer Overflow Vulnerabilities [J],"WANG, Lei and LI, Ji and LI, Bo-yang",2008,Protection Mechanism Failure,Static Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Empirical Study
6945306,Hunter: Online Accurate Taint Propagation Analysis Based System for Detecting Bugs in Binaries,G. Li and S. x. Wang and Y. Zhang and X. Peng,2014,Multiple,Dynamic Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,No,Pointer- or memory access-related vulnerability,"",Experiment
7338757,Memory corruption vulnerabilities detection for Android binary software,B. Zhang and B. Wu and C. Feng and C. Tang,2015,Multiple,Static Analysis,Web Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Memory corruption vulnerabilities,"",Empirical Study
Lu:2012:CSV:2382196.2382223,CHEX: Statically Vetting Android Apps for Component Hijacking Vulnerabilities,Long Lu and Zhichun Li and Zhenyu Wu and Wenke Lee and Guofei Jiang,2012,Multiple,Static Analysis,Mobile Applications,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,No,"Permission leakage, unauthorized data access, intent spoofing","",Empirical Study
merlo2006insider,Insider and ousider threat-sensitive sql injection vulnerability analysis in php,"Merlo, Ettore and Letarte, Dominic and Antoniol, Giuliano",2006,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,No Tool Implemented,Automatic,No,SQL injection,"",Empirical Study
Monshizadeh:2014:MDP:2660267.2660337,MACE: Detecting Privilege Escalation Vulnerabilities in Web Applications,Maliheh Monshizadeh and Prasad Naldurg and V. N. Venkatakrishnan,2014,Multiple,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Vulnerability: horizontal privilege escalation,"",Empirical Study
Wassermann:2007:SPA:1273442.1250739,Sound and Precise Analysis of Web Applications for Injection Vulnerabilities,Gary Wassermann and Zhendong Su,2007,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,SQL injection,"",Empirical Study
6269637,File Parsing Vulnerability Detection with Symbolic Execution,C. Hu and Z. Li and J. Ma and T. Guo and Z. Shi,2012,Multiple,Static Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Empirical Study
Yang:2014:IDC:2590296.2590316,IntentFuzzer: Detecting Capability Leaks of Android Applications,Kun Yang and Jianwei Zhuge and Yongke Wang and Lujue Zhou and Haixin Duan,2014,Protection Mechanism Failure,Dynamic Analysis,Mobile Applications,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,No,Permission vulnerability,"",Experiment
yu2009generating,Generating vulnerability signatures for string manipulating programs using automata-based forward and backward symbolic analyses,"Yu, Fang and Alkhalaf, Muath and Bultan, Tevfik",2009,Protection Mechanism Failure,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,String manipulation vulnerability,"",Experiment
5615484,D-WAV: A Web Application Vulnerabilities Detection Tool Using Characteristics of Web Forms,L. Zhang and Q. Gu and S. Peng and X. Chen and H. Zhao and D. Chen,2010,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,No,"Cross-site scripting, SQL injection","",Empirical Study
sounthiraraj2014smv,"Smv-hunter: Large scale, automated detection of ssl/tls man-in-the-middle vulnerabilities in android apps","Sounthiraraj, David and Sahs, Justin and Greenwood, Garret and Lin, Zhiqiang and Khan, Latifur",2014,Multiple,Hybrid,Mobile Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,SSL/TLS man-in-the-middle vulnerabilities,Static and dynamic analysis,Empirical Study
7275912,XSSDM: Towards detection and mitigation of cross-site scripting vulnerabilities in web applications,M. K. Gupta and M. C. Govil and G. Singh and P. Sharma,2015,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,"",Experiment
takamatsu2012automated,Automated detection of session management vulnerabilities in web applications,"Takamatsu, Yusuke and Kosuga, Yuji and Kono, Kenji",2012,Multiple,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Semi-automatic,No,Session management vulnerabilities,"",Experiment
Martin:2005:FAE:1103845.1094840,Finding Application Errors and Security Flaws Using PQL: A Program Query Language,Michael Martin and Benjamin Livshits and Monica S. Lam,2005,Multiple,Hybrid,Generic,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Static and dynamic analysis,Empirical Study
Parameshwaran:2015:DRT:2786805.2803191,DexterJS: Robust Testing Platform for DOM-based XSS Vulnerabilities,Inian Parameshwaran and Enrico Budianto and Shweta Shinde and Hung Dang and Atul Sadhu and Prateek Saxena,2015,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Cross-site scripting,"",Empirical Study
7434280,JIID: Java input injection detector for pre-deployment vulnerability detection,M. K. Jawalkar and P. S. Gokhale and A. M. Dixit,2015,Multiple,Hybrid,Web Applications,Source Code,No,None,No Tool Implemented,Automatic,No,Injection vulnerabilities,Static and dynamic analysis,""
Gupta:2006:DCI:1138912.1138926,Dynamic Code Instrumentation to Detect and Recover from Return Address Corruption,Suhas Gupta and Pranay Pratap and Huzur Saran and S. Arun-Kumar,2006,Protection Mechanism Failure,Dynamic Analysis,Generic,Compiled Code,No,Empirical,No Tool Implemented,Automatic,No,Buffer overflow,"",Empirical Study
6065738,Automatic Detection of Unsafe Dynamic Component Loadings,T. Kwon and Z. Su,2012,Multiple,Dynamic Analysis,Desktop Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Dynamic component loading vulnerability,"",Empirical Study
huang2005testing,A testing framework for Web application security assessment,"Huang, Yao-Wen and Tsai, Chung-Hung and Lin, Tsung-Po and Huang, Shih-Kun and Lee, DT and Kuo, Sy-Yen",2005,Multiple,Dynamic Analysis,Web Applications,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,No,Not specified,"",Empirical Study
Padmanabhuni:2015:LRT:2819261.2819276,Light-weight Rule-based Test Case Generation for Detecting Buffer Overflow Vulnerabilities,Bindu Madhavi Padmanabhuni and Hee {Beng Kuan Tan},2015,Protection Mechanism Failure,Static Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Experiment
Zhu:2015:MAC:2752952.2752976,Mitigating Access Control Vulnerabilities Through Interactive Static Analysis,Jun Zhu and Bill Chu and Heather Lipford and Tyler Thomas,2015,Multiple,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Access control vulnerability,"",Empirical Study
6841888,Detecting cross site scripting vulnerabilities introduced by HTML5,G. Dong and Y. Zhang and X. Wang and P. Wang and L. Liu,2014,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,"",Case Study
Tevis:2006:SAA:1185448.1185570,Static Analysis of Anomalies and Security Vulnerabilities in Executable Files,"Jay-Evan J. Tevis and Hamilton, Jr., John A.",2006,Multiple,Static Analysis,Desktop Applications,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,No,Six vulnerability types: 1,"",Empirical Study
Yamaguchi:2013:CEM:2508859.2516665,Chucky: Exposing Missing Checks in Source Code for Vulnerability Discovery,Fabian Yamaguchi and Christian Wressnegger and Hugo Gascon and Konrad Rieck,2013,Protection Mechanism Failure,Static Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Improper Input Validation,"",Empirical Study
7062682,A vulnerability scanning tool for session management vulnerabilities,R. Lukanta and Y. Asnar and A. I. Kistijantoro,2014,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Session management vulnerabilities,"",Empirical Study
livshits2005finding,Finding Security Vulnerabilities in Java Applications with Static Analysis.,"Livshits, V Benjamin and Lam, Monica S",2005,Multiple,Static Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented but Not Published,Semi-automatic,No,"SQL injection, Cross-site scripting, HTTP splitting attacks","",Empirical Study
wang2010ricb,RICB: Integer overflow vulnerability dynamic analysis via buffer overflow,"Wang, Yong and Gu, Dawu and Xu, Jianping and Wen, Mi and Deng, Liwen",2010,Protection Mechanism Failure,Dynamic Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Experiment
6065200,Security Testing of Web Applications: A Search-Based Approach for Cross-Site Scripting Vulnerabilities,A. Avancini and M. Ceccato,2011,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,"",Empirical Study
mahmood2012whitebox,A whitebox approach for automated security testing of Android applications on the cloud,"Mahmood, Riyadh and Esfahani, Naeem and Kacem, Thabet and Mirzaei, Nariman and Malek, Sam and Stavrou, Angelos",2012,Multiple,Dynamic Analysis,Mobile Applications,Compiled Code,No,None,No Tool Implemented,Automatic,No,Not specified,"",""
dao2009idea,Idea: Automatic Security Testing for Web Applications,"Dao, Thanh-Binh and Shibayama, Etsuya",2009,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,SQL injection,"",Experiment
felmetsger2010toward,Toward automated detection of logic vulnerabilities in web applications,"Felmetsger, Viktoria and Cavedon, Ludovico and Kruegel, Christopher and Vigna, Giovanni",2010,Multiple,Hybrid,Web Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Application logic vulnerabilities,Static and dynamic analysis,Empirical Study
5976182,Combining Static and Dynamic Analysis to Discover Software Vulnerabilities,R. Zhang and S. Huang and Z. Qi and H. Guan,2011,Multiple,Hybrid,Generic,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Not specified,Static and dynamic analysis,Experiment
Liang:2012:HTA:2336717.2336725,Hash-flow Taint Analysis of Higher-order Programs,Shuying Liang and Matthew Might,2012,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,"",Experiment
6657275,Software Vulnerability Detection Using Backward Trace Analysis and Symbolic Execution,H. Li and T. Kim and M. Bat-Erdene and H. Lee,2013,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Experiment
4021258,A Rule-based Security Auditing Tool for Software Vulnerability Detection,M. Lee and S. Cho and C. Jang and H. Park and E. Choi,2006,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Empirical Study
6013559,A program vulnerabilities detection frame by static code analysis and model checking,L. Xin and C. Wandong,2011,Protection Mechanism Failure,Static Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Buffer overflow,"",Experiment
Mammar:2011:OPA:1982185.1982476,An Overview of a Proof-based Approach to Detecting C Vulnerabilities,Amel Mammar,2011,Multiple,Formal Analysis,Desktop Applications,Source Code,No,Formal,No Tool Implemented,Automatic,No,Not specified,"",Proof
5671078,Proactive Vulnerability Finding via Information Flow Tracking,Z. Liu and X. Zhang and X. Li,2010,Multiple,Dynamic Analysis,Desktop Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Dynamic taint analysis,Empirical Study
7133813,Leveraging Markov chain and optimal mutation strategy for smart fuzzing,Yongji Ouyang and Zehui Wu and Qing Mu and Qingxian Wang,2014,Multiple,Dynamic Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Experiment
Kang:2014:TDT:2663761.2664219,TASEL: Dynamic Taint Analysis with Selective Control Dependency,Byeongho Kang and TaeGuen Kim and BooJoong Kang and Eul Gyu Im and Minsoo Ryu,2014,Multiple,Dynamic Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,No,Not specified,Dynamic taint analysis,Experiment
674827,An automated approach for identifying potential vulnerabilities in software,A. K. Ghosh and T. O'Connor and G. McGraw,1998,Multiple,Dynamic Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Empirical Study
zhang2010intpatch,IntPatch: Automatically fix integer-overflow-to-buffer-overflow vulnerability at compile-time,"Zhang, Chao and Wang, Tielei and Wei, Tao and Chen, Yu and Zou, Wei",2010,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Integer-Overflow-to-Buffer-Overflow vulnerability,"",Empirical Study
7299902,Uncovering Use-After-Free Conditions in Compiled Code,D. Dewey and B. Reaves and P. Traynor,2015,Improper Control of a Resource Through its Lifetime,Static Analysis,Desktop Applications,Compiled Code,Yes,Formal,Tool Implemented but Not Published,Automatic,No,Use-after-free conditions: these are symptoms of a vulnerability,"",Proof
Ma:2016:CAR:2897845.2897896,CDRep: Automatic Repair of Cryptographic Misuses in Android Applications,Siqi Ma and David Lo and Teng Li and Robert H. Deng,2016,Protection Mechanism Failure,Static Analysis,Mobile Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Cryptographic APIs' misuse,"",Empirical Study
6200194,A Taint Based Approach for Smart Fuzzing,S. Bekrar and C. Bekrar and R. Groz and L. Mounier,2012,Multiple,Dynamic Analysis,Desktop Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"Fuzzing, dynamic taint analysis",Empirical Study
Chen:2014:CIB:2554850.2554875,Crashmaker: An Improved Binary Concolic Testing Tool for Vulnerability Detection,Bing Chen and Qingkai Zeng and Weiguang Wang,2014,Multiple,Hybrid,Generic,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,Not specified,Concolic testing,Experiment
Moller:2012:ADC:2337223.2337312,Automated Detection of Client-state Manipulation Vulnerabilities,Anders M{\o}ller and Mathias Schwarz,2012,Multiple,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Client-state manipulation vulnerabilities,"",Empirical Study
hackett2006modular,Modular checking for buffer overflows in the large,"Hackett, Brian and Das, Manuvir and Wang, Daniel and Yang, Zhe",2006,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Experiment
4908466,Static Vulnerabilities Detection Based on Extended Vulnerability State Machine Model,B. Liang,2009,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Experiment
heelan2012augmenting,Augmenting vulnerability analysis of binary code,"Heelan, Sean and Gianni, Agustin",2012,Multiple,Dynamic Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented but Not Published,Semi-automatic,No,Not specified,"",Empirical Study
schneider2013online,Online model-based behavioral fuzzing,"Schneider, Martin and Gro{\ss}mann, J{\""u}rgen and Schieferdecker, Ina and Pietschker, Andrej",2013,Multiple,Dynamic Analysis,Generic,Compiled Code,No,Empirical,No Tool Implemented,Automatic,No,Not specified,Fuzzing,Empirical Study
wei2013practical,Practical blended taint analysis for JavaScript,"Wei, Shiyi and Ryder, Barbara G",2013,Multiple,Hybrid,Web Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Blended taint analysis: static and dynamic analysis,Case Study
cova2006static,Static detection of vulnerabilities in x86 executables,"Cova, Marco and Felmetsger, Viktoria and Banks, Greg and Vigna, Giovanni",2006,Multiple,Static Analysis,Desktop Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Experiment
SEC:SEC1179,PaddyFrog: systematically detecting confused deputy vulnerability in Android applications,Jianliang Wu and Tingting Cui and Tao Ban and Shanqing Guo and Lizhen Cui,2015,Protection Mechanism Failure,Static Analysis,Mobile Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Confused deputy (privilege escalation vulnerability,"",Empirical Study
4770021,A Novel Method of Software Vulnerability Detection based on Fuzzing Technique,X. S. Zhang and L. Shao and J. Zheng,2008,Protection Mechanism Failure,Dynamic Analysis,Generic,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,Fuzzing,Experiment
PAP546,A tool for static detection of timing channels in Java,Alexander Lux,2011,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,Timing attack,"",Case Study
nagy2009static,Static security analysis based on input-related software faults,"Nagy, Csaba and Mancoridis, Spiros",2009,Multiple,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Input-related vulnerabilities,"",Empirical Study
Duchene:2014:KEF:2557547.2557550,KameleonFuzz: Evolutionary Fuzzing for Black-box XSS Detection,Fabien Duchene and Sanjay Rawat and Jean-Luc Richier and Roland Groz,2014,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Cross-site scripting,Fuzzing,Empirical Study
Malek:2014:ADM:2661694.2661699,Automated Detection and Mitigation of Inter-application Security Vulnerabilities in Android (Invited Talk),Sam Malek and Hamid Bagheri and Alireza Sadeghi,2014,Multiple,Dynamic Analysis,Mobile Applications,Compiled Code,Yes,None,Tool Implemented but Not Published,Automatic,No,Inter-application security vulnerabilities,"",""
halfond2011improving,Improving penetration testing through static and dynamic analysis,"Halfond, William GJ and Choudhary, Shauvik Roy and Orso, Alessandro",2011,Multiple,Hybrid,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Static and dynamic analysis,Empirical Study
Kwon:2012:DAI:2393596.2393599,Detecting and Analyzing Insecure Component Usage,Taeho Kwon and Zhendong Su,2012,Multiple,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Insecure component usage,"",Empirical Study
tripp2013andromeda,Andromeda: Accurate and scalable security analysis of web applications,"Tripp, Omer and Pistoia, Marco and Cousot, Patrick and Cousot, Radhia and Guarnieri, Salvatore",2013,Protection Mechanism Failure,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,"SQL injection, cross-site scripting",Tainting,Empirical Study
li2011release,Release: Generating exploits using loop-aware concolic execution,"Li, Bing-Han and Shieh, Shiuhpyng",2011,Protection Mechanism Failure,Hybrid,Generic,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,Buffer overflow,Concolic testing,Empirical Study
Ganapathy:2003:BOD:948109.948155,Buffer Overrun Detection Using Linear Programming and Static Analysis,Vinod Ganapathy and Somesh Jha and David Chandler and David Melski and David Vitek,2003,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Empirical Study
1567060,Flow-sensitive buffer overrun detection based on syntax node,Liao Guangdeng and Liu Fang and Wu Yonghua,2005,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Empirical Study
7371847,A Smart Fuzzing Method for Detecting Heap-Based Buffer Overflow in Executable Codes,M. Mouzarani and B. Sadeghiyan and M. Zolfaghari,2015,Protection Mechanism Failure,Hybrid,Generic,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,Concolic testing,Empirical Study
6200193,XSS Vulnerability Detection Using Model Inference Assisted Evolutionary Fuzzing,F. Duchene and R. Groz and S. Rawat and J. L. Richier,2012,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,No,None,No Tool Implemented,Automatic,No,Cross-site scripting,Fuzzing,""
4020095,Integrating Static and Dynamic Analysis for Detecting Vulnerabilities,A. Aggarwal and P. Jalote,2006,Protection Mechanism Failure,Hybrid,Generic,Source Code,No,Empirical,No Tool Implemented,Automatic,No,Buffer overflow,Static and dynamic analysis,Experiment
6987553,A context-sensitive approach for precise detection of cross-site scripting vulnerabilities,M. K. Gupta and M. C. Govil and G. Singh,2014,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,Tainting,Experiment
serebryany2012addresssanitizer,AddressSanitizer: A Fast Address Sanity Checker.,"Serebryany, Konstantin and Bruening, Derek and Potapenko, Alexander and Vyukov, Dmitriy",2012,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Buffer overflow,"",Empirical Study
Mazurak:2007:BFB:1255329.1255347,ABASH: Finding Bugs in Bash Scripts,Karl Mazurak and Steve Zdancewic,2007,Multiple,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Bash scripts vulnerabilities,"",Experiment
yamaguchi2014modeling,Modeling and discovering vulnerabilities with code property graphs,"Yamaguchi, Fabian and Golde, Nico and Arp, Daniel and Rieck, Konrad",2014,Multiple,Static Analysis,Generic,Source Code,Yes,Empirical,No Tool Implemented,Automatic,No,"Buffer overflow, Integer overflow, Format string vulnerabilities, memory discolsure","",Empirical Study
rawat2011offset,Offset-aware mutation based fuzzing for buffer overflow vulnerabilities: Few preliminary results,"Rawat, Sanjay and Mounier, Laurent",2011,Protection Mechanism Failure,Hybrid,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,Static and dynamic analysis,Empirical Study
Pham:2010:DRS:1858996.1859089,Detection of Recurring Software Vulnerabilities,Nam H. Pham and Tung Thanh Nguyen and Hoan Anh Nguyen and Tien N. Nguyen,2010,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,Not specified,"",Empirical Study
5304255,CodeAuditor: A Vulnerability Detection Framework Based on Constraint Analysis and Model Checking,L. Wang and G. Chen and J. Wang and P. Zhao and Q. Zhang,2009,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Empirical Study
7284957,Research on the Collaborative Analysis Technology for Source Code and Binary Executable Based upon the Unified Defect Mode Set,X. Liang and B. Cui and Y. Lv and Y. Fu,2015,Multiple,Hybrid,Generic,Source Code,No,Empirical,No Tool Implemented,Automatic,No,Not specified,Static and dynamic analysis,Case Study
5703573,PDVDS: A Pattern-Driven Software Vulnerability Detection System,S. Cheng and J. Wang and J. Wang and J. Yang and F. Jiang,2010,Multiple,Static Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Not specified,"",Experiment
PAP15,"APSET, an Android aPplication SEcurity Testing tool for detecting intent-based vulnerabilities",S\'{e}bastien Salva,2015,Multiple,Static Analysis,Mobile Applications,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,No,Intent-based vulnerabilities,"",Experiment
son2011saferphp,SAFERPHP: Finding semantic vulnerabilities in PHP applications,"Son, Sooel and Shmatikov, Vitaly",2011,Multiple,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Semantic vulnerabilities,"",Empirical Study
ceesay2006using,Using type qualifiers to analyze untrusted integers and detecting security flaws in C programs,"Ceesay, Ebrima N and Zhou, Jingmin and Gertz, Michael and Levitt, Karl and Bishop, Matt",2006,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Integer overflow,"",Empirical Study
Jovanovic:2006:PAA:1134744.1134751,Precise Alias Analysis for Static Detection of Web Application Vulnerabilities,Nenad Jovanovic and Christopher Kruegel and Engin Kirda,2006,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Cross-site scripting,"",Empirical Study
6341635,Detection of Buffer Overflow Vulnerabilities in C/C++ with Pattern Based Limited Symbolic Evaluation,S. Ding and H. B. K. Tan and K. Liu and M. Chandramohan and H. Zhang,2012,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Experiment
Takamatsu:2010:ADS:1772690.1772869,Automated Detection of Session Fixation Vulnerabilities,Yusuke Takamatsu and Yuji Kosuga and Kenji Kono,2010,Improper Control of a Resource Through its Lifetime,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Session fixation,"",Experiment
samuel2011context,Context-sensitive auto-sanitization in web templating languages using type qualifiers,"Samuel, Mike and Saxena, Prateek and Song, Dawn",2011,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Both,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,"",""
Huang:2004:SWA:988672.988679,Securing Web Application Code by Static Analysis and Runtime Protection,Yao-Wen Huang and Fang Yu and Christian Hang and Chung-Hung Tsai and Der-Tsai Lee and Sy-Yen Kuo,2004,Multiple,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Empirical Study
Bezemer:2009:AST:1595696.1595711,Automated Security Testing of Web Widget Interactions,Cor-Paul Bezemer and Ali Mesbah and Arie van Deursen,2009,Improper Interaction Between Multiple Entities,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,Yes,Web widget interactions,"",Case Study
5504701,TaintScope: A Checksum-Aware Directed Fuzzing Tool for Automatic Software Vulnerability Detection,T. Wang and T. Wei and G. Gu and W. Zou,2010,Protection Mechanism Failure,Hybrid,Generic,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,Yes,Improper Input Validation,dynamic taint analysis and symbolic execution,Empirical Study
Le:2007:RBO:1251535.1251546,Refining Buffer Overflow Detection via Demand-driven Path-sensitive Analysis,Wei Le and Mary Lou Soffa,2007,Protection Mechanism Failure,Static Analysis,Generic,Source Code,No,Empirical,No Tool Implemented,Automatic,No,Buffer overflow,"",Experiment
6615262,Design of automatic vulnerability detection system for Web application program,Binbin Qu and Beihai Liang and Sheng Jiang and Chutian Ye,2013,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,"SQL injection, cross-site scripting","",Experiment
Wang:2011:CFC:2019599.2019600,Checksum-Aware Fuzzing Combined with Dynamic Taint Analysis and Symbolic Execution,Tielei Wang and Tao Wei and Guofei Gu and Wei Zou,2011,Multiple,Hybrid,Desktop Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Not specified,Static and dynamic analysis,Experiment
Chaudhuri:2010:SSA:1866307.1866373,Symbolic Security Analysis of Ruby-on-rails Web Applications,Avik Chaudhuri and Jeffrey S. Foster,2010,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Cross-site scripting,"",Empirical Study
Fu:2008:SSI:1390832.1390838,SAFELI: SQL Injection Scanner Using Symbolic Execution,Xiang Fu and Kai Qian,2008,Protection Mechanism Failure,Static Analysis,Web Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,SQL injection,Symbolic execution,Empirical Study
5770635,Finding Software Vulnerabilities by Smart Fuzzing,S. Bekrar and C. Bekrar and R. Groz and L. Mounier,2011,Multiple,Hybrid,Generic,Source Code,No,None,No Tool Implemented,Automatic,No,Not specified,"Fuzzing, tainting",""
SPE:SPE515,Buffer overflow and format string overflow vulnerabilities,Kyung-Suk Lhee and Steve J. Chapin,2003,Protection Mechanism Failure,Dynamic Analysis,Desktop Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,"Buffer overflow, format string overflow","",Empirical Study
martin2008automatic,Automatic generation of XSS and SQL injection attacks with goal-directed model checking,"Martin, Michael and Lam, Monica S",2008,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Semi-automatic,No,"Cross-site scripting, SQL injection","",Empirical Study
petukhov2008detecting,Detecting security vulnerabilities in web applications using dynamic analysis with penetration testing,"Petukhov, Andrey and Kozlov, Dmitry",2008,Multiple,Hybrid,Web Applications,Source Code,No,Empirical,No Tool Implemented,Automatic,No,Not specified,"Tainting, dynamic analysis",Case Study
4700313,Detection and Prediction of Resource-Exhaustion Vulnerabilities,J. Antunes and N. F. Neves and P. J. Ver\'{\i}ssimo,2008,Multiple,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Resource-exhaustion vulnerabilities,"",Empirical Study
son2011rolecast,Rolecast: finding missing security checks when you do not know what checks are,"Son, Sooel and McKinley, Kathryn S and Shmatikov, Vitaly",2011,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Permission vulnerability,"",Empirical Study
Vedala:2012:ADP:2381716.2381787,Automatic Detection of Printf Format String Vulnerabilities in Software Applications Using Static Analysis,Radha Vedala and Simhadri Anil kumar,2012,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,No,None,Tool Implemented but Not Published,Automatic,No,Format string vulnerabilities,"",""
5529688,Vulnerability detector using parse tree annotation,M. Akbari and S. Berenji and R. Azmi,2010,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Empirical Study
Zuo:2015:ADS:2714576.2714583,Automatically Detecting SSL Error-Handling Vulnerabilities in Hybrid Mobile Web Apps,Chaoshun Zuo and Jianliang Wu and Shanqing Guo,2015,Improper Check or Handling of Exceptional Conditions,Hybrid,Mobile Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,SSL error-handling vulnerabilities,Static and dynamic analysis,Empirical Study
5463673,Taint Dependency Sequences: A Characterization of Insecure Execution Paths Based on Input-Sensitive Cause Sequences,D. Ceara and L. Mounier and M. L. Potet,2010,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Tainting,Experiment
lin2008convicting,Convicting exploitable software vulnerabilities: An efficient input provenance based approach,"Lin, Zhiqiang and Zhang, Xiangyu and Xu, Dongyan",2008,Multiple,Static Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Empirical Study
5634685,A Method of Detecting Vulnerability Defects Based on Static Analysis,X. Qing and Y. Z. Hong and G. Y. Zhan,2010,Protection Mechanism Failure,Static Analysis,Generic,Source Code,No,None,Tool Implemented but Not Published,Automatic,No,Not specified,"",""
7064628,TWalker: An efficient taint analysis tool,Jinxin Ma and Puhan Zhang and Guowei Dong and Shuai Shao and Jiangxiao Zhang,2014,Multiple,Static Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Tainting,Experiment
saxena2010flax,FLAX: Systematic Discovery of Client-side Validation Vulnerabilities in Rich Web Applications.,"Saxena, Prateek and Hanna, Steve and Poosankam, Pongsin and Song, Dawn",2010,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Client-side validation vulnerabilities,"",Empirical Study
6845694,Directed symbolic execution for binary vulnerability mining,Bo Wu and Mengjun Li and Bin Zhang and Quan Zhang and Chaojing Tang,2014,Multiple,Static Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Taint analysis and symbolic execution,Empirical Study
sun2011static,Static Detection of Access Control Vulnerabilities in Web Applications.,"Sun, Fangqi and Xu, Liang and Su, Zhendong",2011,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Improper access control,"",Empirical Study
viega2002token,Token-based scanning of source code for security problems,"Viega, John and Bloch, JT and Kohno, Tadayoshi and McGraw, Gary",2002,Multiple,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Case Study
5741384,DsVD: An Effective Low-Overhead Dynamic Software Vulnerability Discoverer,Z. Wang and Z. Tang and K. Zhou and R. Zhang and Z. Qi and H. Guan,2011,Multiple,Dynamic Analysis,Desktop Applications,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,No,Not specified,"",Experiment
Medeiros:2014:ADC:2566486.2568024,Automatic Detection and Correction of Web Application Vulnerabilities Using Data Mining to Predict False Positives,Ib\'{e}ria Medeiros and Nuno F. Neves and Miguel Correia,2014,Multiple,Hybrid,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"Tainting, machine learning",Experiment
demott2007revolutionizing,Revolutionizing the field of grey-box attack surface testing with evolutionary fuzzing,"DeMott, Jared and Enbody, Richard and Punch, William F",2007,Multiple,Dynamic Analysis,Generic,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Not specified,"",Case Study
7307733,Evaluating Initial Inputs for Concolic Testing,W. Wang and Q. Zeng,2015,Multiple,Hybrid,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Not specified,Concolic testing,Experiment
larochelle2001statically,Statically Detecting Likely Buffer Overflow Vulnerabilities.,"Larochelle, David and Evans, David and others",2001,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Empirical Study
wagner2000first,A First Step Towards Automated Detection of Buffer Overrun Vulnerabilities.,"Wagner, David and Foster, Jeffrey S and Brewer, Eric A and Aiken, Alexander",2000,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Empirical Study
Shahriar:2016:OIV:2851613.2851865,Object Injection Vulnerability Discovery Based on Latent Semantic Indexing,Hossain Shahriar and Hisham Haddad,2016,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Improper Input Validation,"",Empirical Study
abdelnur2007kif,KiF: a stateful SIP fuzzer,"Abdelnur, Humberto J and Festor, Olivier and others",2007,Multiple,Dynamic Analysis,Generic,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Fuzzing,Empirical Study
li2013dynamic,Dynamic analysis and debugging of binary code for security applications,"Li, Lixin and Wang, Chao",2013,Multiple,Static Analysis,Generic,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"Symbolic execution, tainting",Empirical Study
thomas2009automated,On automated prepared statement generation to remove SQL injection vulnerabilities,"Thomas, Stephen and Williams, Laurie and Xie, Tao",2009,Protection Mechanism Failure,Static Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,SQL injection,"",Case Study
5066476,Enhancing Automated Detection of Vulnerabilities in Java Components,P. Parrend,2009,Multiple,Static Analysis,Generic,Source Code,No,None,Tool Implemented and Published,Automatic,No,Not specified,"",""
6614377,Detecting Cross-Site Scripting Vulnerability Using Concolic Testing,M. E. Ruse and S. Basu,2013,Protection Mechanism Failure,Hybrid,Web Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,Concolic testing,Empirical Study
lei2011detection,Detection of code vulnerabilities via constraint-based analysis and model checking,"Lei, Wang and Gui, Chen and Maozhong, Jin",2011,Multiple,Static Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,"Buffer overflow, code injection","Constraint-based analysis, model checking",Empirical Study
Zheng:2013:PSS:2486788.2486874,Path Sensitive Static Analysis of Web Applications for Remote Code Execution Vulnerability Detection,Yunhui Zheng and Xiangyu Zhang,2013,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,"",Empirical Study
Wang:2015:DMM:2799979.2799988,A Dynamic Marking Method for Implicit Information Flow in Dynamic Taint Analysis,Xuefei Wang and Hengtai Ma and Lisha Jing,2015,Multiple,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Not specified,Dynamic taint analysis,Empirical Study
5234394,Research on strong-association rule based web application vulnerability detection,H. Tian and J. Xu and K. Lian and Y. Zhang,2009,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,"Cross-site scripting, SQL injection","",Experiment
Sadeghi:2015:AAI:2819009.2819149,Analysis of Android Inter-app Security Vulnerabilities Using COVERT,Alireza Sadeghi and Hamid Bagheri and Sam Malek,2015,Multiple,Static Analysis,Mobile Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Inter-app vulnerabilities,"",Empirical Study
Appelt:2014:ATS:2610384.2610403,Automated Testing for SQL Injection Vulnerabilities: An Input Mutation Approach,Dennis Appelt and Cu Duy Nguyen and Lionel C. Briand and Nadia Alshahwan,2014,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,SQL injection,"",Empirical Study
viega2000its4,ITS4: A static vulnerability scanner for C and C++ code,"Viega, John and Bloch, Jon-Thomas and Kohno, Yoshi and McGraw, Gary",2000,Multiple,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Not specified,"",Empirical Study
chen2013armory,ARMORY: An automatic security testing tool for buffer overflow defect detection,"Chen, Li-Han and Hsu, Fu-Hau and Hwang, Yanling and Su, Mu-Chun and Ku, Wei-Shinn and Chang, Chi-Hsuan",2013,Protection Mechanism Failure,Dynamic Analysis,Desktop Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Buffer overflow,"",Experiment
7062698,Input injection detection in Java code,E. S. Pasaribu and Y. Asnar and M. M. I. Liem,2014,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,"SQL injection, cross-site scripting","",Empirical Study
zhu2011new,A New Fuzzing Method Using Multi Data Samples Combination.,"Zhu, Xueyong and Wu, Zhiyong and Atwood, J William",2011,Multiple,Dynamic Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Fuzzing,Experiment
Hay:2015:DDI:2771783.2771800,Dynamic Detection of Inter-application Communication Vulnerabilities in Android,Roee Hay and Omer Tripp and Marco Pistoia,2015,Protection Mechanism Failure,Dynamic Analysis,Mobile Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Improper Input Validation,"",Empirical Study
PAP505,Static Analysis Method for Detecting Buffer Overflow Vulnerabilities,F. M. Puchkov,2005,Protection Mechanism Failure,Static Analysis,Generic,Source Code,No,Formal,No Tool Implemented,Automatic,No,Buffer overflow,"",Proof
duchene2013fuzz,Fuzz in the Dark: Genetic Algorithm for Black-Box Fuzzing,"Duchene, Fabien",2013,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,Fuzzing,Empirical Study
Shahriar:2013:BOP:2505420.2505421,Buffer Overflow Patching for C and C++ Programs: Rule-based Approach,Hossain Shahriar and Hisham M. Haddad and Ishan Vaidya,2013,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Empirical Study
6980324,LiSTT: An Investigation into Unsound-Incomplete Yet Practical Result Yielding Static Taintflow Analysis,S. Rawat and L. Mounier and M. L. Potet,2014,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Tainting,Experiment
Fung:2014:SRW:2590296.2590324,Scanning of Real-world Web Applications for Parameter Tampering Vulnerabilities,Adonis P.H. Fung and Tielei Wang and K. W. Cheung and T. Y. Wong,2014,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Improper Input Validation,Fuzzing,Empirical Study
rawat2010evolutionary,An evolutionary computing approach for hunting buffer overflow vulnerabilities: A case of aiming in dim light,"Rawat, Sanjay and Mounier, Laurent",2010,Protection Mechanism Failure,Dynamic Analysis,Desktop Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,Fuzzing,Empirical Study
shahriar2009mutec,Mutec: Mutation-based testing of cross site scripting,"Shahriar, Hossain and Zulkernine, Mohammad",2009,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,"",Empirical Study
5544310,Detecting vulnerabilities in C programs using trace-based testing,Dazhi Zhang and Donggang Liu and Yu Lei and D. Kung and C. Csallner and Wenhua Wang,2010,Multiple,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Experiment
7397098,Software Vulnerability Detection Based on Code Coverage and Test Cost,B. Shuai and H. Li and L. Zhang and Q. Zhang and C. Tang,2015,Multiple,Dynamic Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Fuzzing,Experiment
Shar:2012:PCW:2351676.2351733,Predicting Common Web Application Vulnerabilities from Input Validation and Sanitization Code Patterns,Lwin Khin Shar and Hee Beng Kuan Tan,2012,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,"SQL injection, cross-site scripting","",Experiment
6748583,Detection of software vulnerabilities based on Fuzzing,Bi Mingguang and Huang Xuan and Huang Rui,2013,Multiple,Dynamic Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Fuzzing,Experiment
SEC:SEC714,Structurized grammar-based fuzz testing for programs with highly structured inputs,Jingbo Yan and Yuqing Zhang and Dingning Yang,2013,Multiple,Dynamic Analysis,Generic,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Fuzzing,Experiment
Trinh:2014:SSS:2660267.2660372,S3: A Symbolic String Solver for Vulnerability Detection in Web Applications,Minh-Thai Trinh and Duc-Hiep Chu and Joxan Jaffar,2014,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,Improper Input Validation,"",Empirical Study
Kong:2007:ISC:1366804.1366875,ISA: A Source Code Static Vulnerability Detection System Based on Data Fusion,Deguang Kong and Quan Zheng and Chao Chen and Jianmei Shuai and Ming Zhu,2007,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Experiment
5230618,Inputs of Coma: Static Detection of Denial-of-Service Vulnerabilities,R. Chang and G. Jiang and F. Ivancic and S. Sankaranarayanan and V. Shmatikov,2009,Improper Control of a Resource Through its Lifetime,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Uncontrolled resource consumption,"",Empirical Study
7273662,Detecting Malicious Inputs of Web Application Parameters Using Character Class Sequences,Y. Zhong and H. Asakura and H. Takakura and Y. Oshima,2015,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,SQL injection,"",Experiment
Tripp:2014:HSA:2610384.2610385,Hybrid Security Analysis of Web JavaScript Code via Dynamic Partial Evaluation,Omer Tripp and Pietro Ferrara and Marco Pistoia,2014,Multiple,Hybrid,Web Applications,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,Not specified,Static and dynamic analysis,Empirical Study
del2008detecting,Detecting buffer overflow via automatic test input data generation,"Del Grosso, Concettina and Antoniol, Giuliano and Merlo, Ettore and Galinier, Philippe",2008,Protection Mechanism Failure,Hybrid,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,Static and dynamic analysis,Case Study
Barabanov:2015:PMS:2799979.2800019,A Production Model System for Detecting Vulnerabilities in the Software Source Code,Alexander Barabanov and Alexey Markov and Andrey Fadin and Valentin Tsirlov,2015,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Empirical Study
arzt2014flowdroid,"Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps","Arzt, Steven and Rasthofer, Siegfried and Fritz, Christian and Bodden, Eric and Bartel, Alexandre and Klein, Jacques and Le Traon, Yves and Octeau, Damien and McDaniel, Patrick",2014,Improper Control of a Resource Through its Lifetime,Static Analysis,Mobile Applications,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,Information exposure,Tainting,Experiment
nguyen2005automatically,Automatically hardening web applications using precise tainting,"Nguyen-Tuong, Anh and Guarnieri, Salvatore and Greene, Doug and Shirley, Jeff and Evans, David",2005,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,No Tool Implemented,Automatic,No,"SQL injection, cross-site scripting",Tainting,Empirical Study
chess2002improving,Improving computer security using extended static checking,"Chess, Brian V",2002,Multiple,Static Analysis,Desktop Applications,Source Code,No,Empirical,No Tool Implemented,Automatic,No,Not specified,"",Empirical Study
7424372,Predicting Vulnerable Software Components through N-Gram Analysis and Statistical Feature Selection,Y. Pang and X. Xue and A. S. Namin,2015,Multiple,Machine Learning,Mobile Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Empirical Study
shar2012automated,Automated removal of cross site scripting vulnerabilities in web applications,"Shar, Lwin Khin and Tan, Hee Beng Kuan",2012,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,"",Experiment
PAP567,Model checking driven static analysis for the real world: designing and tuning large scale bug detection,Ansgar Fehnker,2013,Multiple,Static Analysis,Desktop Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Empirical Study
5999219,A Parallel Vulnerability Detection Framework via MPI,G. Wang and L. Wang,2011,Multiple,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Empirical Study
7070488,MARFCAT: Fast code analysis for defects and vulnerabilities,S. A. Mokhov and J. Paquet and M. Debbabi,2015,Multiple,Machine Learning,Generic,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Empirical Study
4641280,Model-Checking for Software Vulnerabilities Detection with Multi-Language Support,R. Hadjidj and X. Yang and S. Tlili and M. Debbabi,2008,Multiple,Static Analysis,Desktop Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Experiment
4730998,Code based software security vulnerability analyzing and detecting based on similar characteristic,Xifeng An and Weihua Li and Wei Pan,2008,Multiple,Static Analysis,Desktop Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Experiment
chandramouli2004automated,Automated testing of security functions using a combined model and interface-driven approach,"Chandramouli, Ramaswamy and Blackburn, Mark",2004,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Semi-automatic,No,Not specified,"",Empirical Study
wang2009intscope,IntScope: Automatically Detecting Integer Overflow Vulnerability in X86 Binary Using Symbolic Execution.,"Wang, Tielei and Wei, Tao and Lin, Zhiqiang and Zou, Wei",2009,Protection Mechanism Failure,Static Analysis,Desktop Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Integer overflow,"",Experiment
Guo:2014:ATA:2593501.2593503,An Automated Testing Approach for Inter-application Security in Android,Chenkai Guo and Jing Xu and Hongji Yang and Ying Zeng and Shuang Xing,2014,Protection Mechanism Failure,Hybrid,Mobile Applications,Compiled Code,No,Empirical,No Tool Implemented,Automatic,No,Permission vulnerability,Static and dynamic analysis,Empirical Study
zhang2008detection,Detection techniques of format-string vulnerabilities in binary files,"ZHANG, Long-jie and XIE, Xiao-fang and YUAN, Sheng-zhi and TANG, Jiang",2008,Protection Mechanism Failure,Dynamic Analysis,Generic,Compiled Code,No,Empirical,No Tool Implemented,Automatic,No,Improper Input Validation,"",Empirical Study
1410997,Identifying cross site scripting vulnerabilities in Web applications,G. A. Di Lucca and A. R. Fasolino and M. Mastoianni and P. Tramontana,2004,Protection Mechanism Failure,Hybrid,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,Static and dynamic analysis,Case Study
Kals:2006:SWV:1135777.1135817,SecuBat: A Web Vulnerability Scanner,Stefan Kals and Engin Kirda and Christopher Kruegel and Nenad Jovanovic,2006,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,"SQL injection, cross-site scripting","",Empirical Study
6009250,Enhancing Penetration Testing with Attack Signatures and Interface Monitoring for the Detection of Injection Vulnerabilities in Web Services,N. Antunes and M. Vieira,2011,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,SQL injection,"",Experiment
tripp2009taj,TAJ: effective taint analysis of web applications,"Tripp, Omer and Pistoia, Marco and Fink, Stephen J and Sridharan, Manu and Weisman, Omri",2009,Multiple,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Tainting,Empirical Study
5931132,Efficient Taint Analysis with Taint Behavior Summary,R. Zhang and S. Huang and Z. Qi,2011,Multiple,Dynamic Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Dynamic taint analysis,Experiment
shankar2001detecting,Detecting Format String Vulnerabilities with Type Qualifiers.,"Shankar, Umesh and Talwar, Kunal and Foster, Jeffrey S and Wagner, David",2001,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Format string vulnerabilities,"",Empirical Study
Ciampa:2010:HAD:1809100.1809107,A Heuristic-based Approach for Detecting SQL-injection Vulnerabilities in Web Applications,Angelo Ciampa and Corrado Aaron Visaggio and Massimiliano {Di Penta},2010,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,No,SQL injection,"",Empirical Study
Bastani:2015:IVA:2858965.2814274,Interactively Verifying Absence of Explicit Information Flows in Android Apps,Osbert Bastani and Saswat Anand and Alex Aiken,2015,Multiple,Static Analysis,Mobile Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Information flow vulnerabilities,"",Empirical Study
Caballero:2012:UED:2338965.2336769,Undangle: Early Detection of Dangling Pointers in Use-after-free and Double-free Vulnerabilities,Juan Caballero and Gustavo Grieco and Mark Marron and Antonio Nappa,2012,Improper Adherence to Coding Standards,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Use-after-free vulnerabilities,"",Empirical Study
6221690,PyXhon: Dynamic detection of security vulnerabilities in Python extensions,M. Sun and D. Gu and J. Li and B. Li,2012,Improper Control of a Resource Through its Lifetime,Hybrid,Generic,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Information exposure,Static and dynamic analysis,Experiment
6155723,Automated Security Test Generation with Formal Threat Models,D. Xu and M. Tu and M. Sanford and L. Thomas and D. Woodraska and W. Xu,2012,Protection Mechanism Failure,Dynamic Analysis,Generic,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Improper Input Validation,"",Experiment
6884962,An approach to minimize false positive in SQLI vulnerabilities detection techniques through data mining,M. K. Gupta and M. C. Govil and G. Singh,2014,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,SQL injection,Data mining,Empirical Study
Lipford:2014:ICA:2663887.2663901,Interactive Code Annotation for Security Vulnerability Detection,Heather Lipford and Tyler Thomas and Bill Chu and Emerson Murphy-Hill,2014,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Semi-automatic,No,Not specified,"",User Study
son2013fix,Fix Me Up: Repairing Access-Control Bugs in Web Applications.,"Son, Sooel and McKinley, Kathryn S and Shmatikov, Vitaly",2013,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Improper access control,"",Empirical Study
Li:2010:PES:1882291.1882338,Practical and Effective Symbolic Analysis for Buffer Overflow Detection,Lian Li and Cristina Cifuentes and Nathan Keynes,2010,Protection Mechanism Failure,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,Symbolic execution,Empirical Study
avancini2010towards,Towards security testing with taint analysis and genetic algorithms,"Avancini, Andrea and Ceccato, Mariano",2010,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,Tainting,Empirical Study
Kumar:2009:HAE:1506216.1506248,Hybrid Analysis of Executables to Detect Security Vulnerabilities: Security Vulnerabilities,Pranith D. Kumar and Anchal Nema and Rajeev Kumar,2009,Multiple,Hybrid,Generic,Compiled Code,No,None,No Tool Implemented,Automatic,No,"Buffer overflow, Use-after-free vulnerabilities",Static and dynamic analysis,""
4561229,Auditing System Using Rule-Based Reasoning in Ubiquitous Computing,M. Lee and S. Cho and H. Chang and J. Jo and H. Jung and E. Choi,2008,Multiple,Static Analysis,Generic,Source Code,No,Empirical,No Tool Implemented,Automatic,No,Not specified,"",Empirical Study
SPE:SPE2111,A threat model-based approach to security testing,Aaron Marback and Hyunsook Do and Ke He and Samuel Kondamarri and Dianxiang Xu,2013,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Empirical Study
lekies201325,25 million flows later: large-scale detection of DOM-based XSS,"Lekies, Sebastian and Stock, Ben and Johns, Martin",2013,Protection Mechanism Failure,Static Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,Tainting,Empirical Study
yu2009hybrid,A hybrid approach to detecting security defects in programs,"Yu, Lian and Zhou, Jun and Yi, Yue and Fan, Jianchu and Wang, Qianxiang",2009,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Experiment
kang2011dta++,DTA++: Dynamic Taint Analysis with Targeted Control-Flow Propagation.,"Kang, Min Gyung and McCamant, Stephen and Poosankam, Pongsin and Song, Dawn",2011,Multiple,Dynamic Analysis,Desktop Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Dynamic taint analysis,Case Study
mokhov2014use,The use of NLP techniques in static code analysis to detect weaknesses and vulnerabilities,"Mokhov, Serguei A and Paquet, Joey and Debbabi, Mourad",2014,Multiple,Hybrid,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"Natural language processing, machine learning",Empirical Study
sridharan2011f4f,F4F: taint analysis of framework-based web applications,"Sridharan, Manu and Artzi, Shay and Pistoia, Marco and Guarnieri, Salvatore and Tripp, Omer and Berg, Ryan",2011,Multiple,Static Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Not specified,Tainting,Experiment
PAP177,Static analyzer Svace for finding defects in a source program code,V. P. Ivannikov and A. A. Belevantsev and A. E. Borodin and V. N. Ignatiev and D. M. Zhurikhin,2014,Multiple,Static Analysis,Desktop Applications,Source Code,No,None,Tool Implemented and Published,Automatic,No,Not specified,"",""
Lee:2015:DED:2714576.2714607,On Designing an Efficient Distributed Black-Box Fuzzing System for Mobile Devices,Wang Hao Lee and Murali {Srirangam Ramanujam} and S.P.T. Krishnan,2015,Multiple,Dynamic Analysis,Mobile Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Semi-automatic,No,System level vulnerabilities,Fuzzing,Empirical Study
Li:2016:VAV:2991079.2991102,VulPecker: An Automated Vulnerability Detection System Based on Code Similarity Analysis,"Li, Zhen and Zou, Deqing and Xu, Shouhuai and Jin, Hai and Qi, Hanchao and Hu, Jie",2016,Multiple,Static Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Not specified,"",Experiment
Bohme:2016:CGF:2976749.2978428,Coverage-based Greybox Fuzzing As Markov Chain,"B{\""o}hme, Marcel and Pham, Van-Thuan and Roychoudhury, Abhik",2016,Multiple,Dynamic Analysis,Generic,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Empirical Study
Chen:2017:PDS:3133956.3134058,Precise Detection of Side-Channel Vulnerabilities Using Quantitative Cartesian Hoare Logic,"Chen, Jia and Feng, Yu and Dillig, Isil",2017,Improper Control of a Resource Through its Lifetime,Static Analysis,Generic,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Covert channel vulnerability,"",Empirical Study
Garcia:2017:AGI:3106237.3106286,Automatic Generation of Inter-component Communication Exploits for Android Applications,"Garcia, Joshua and Hammad, Mahmoud and Ghorbani, Negar and Malek, Sam",2017,Protection Mechanism Failure,Static Analysis,Mobile Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Improper Input Validation,Symbolic execution,Empirical Study
Bu:2017:PAM:3106237.3117764,When Program Analysis Meets Mobile Security: An Industrial Study of Misusing Android Internet Sockets,"Bu, Wenqi and Xue, Minhui and Xu, Lihua and Zhou, Yajin and Tang, Zhushou and Xie, Tao",2017,Multiple,Hybrid,Mobile Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Static and dynamic analysis,Empirical Study
Medeiros:2016:DSA:2931037.2931041,DEKANT: A Static Analysis Tool That Learns to Detect Web Application Vulnerabilities,"Medeiros, Ib{\'e}ria and Neves, Nuno and Correia, Miguel",2016,Multiple,Machine Learning,Web Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Experiment
7985690,Machine-Learning-Guided Selectively Unsound Static Analysis,"Heo, K. and Oh, H. and Yi, K.",2017,Protection Mechanism Failure,Machine Learning,Desktop Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,"Format string vulnerabilities, buffer overflow","",Experiment
7582816,BovInspector: Automatic inspection and repair of buffer overflow vulnerabilities,"Gao, F. and Wang, L. and Li, X.",2016,Protection Mechanism Failure,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,Buffer overflow,Symbolic execution,Experiment
8029993,Application of Hidden Markov Model in SQL Injection Detection,"Li, P. and Liu, L. and Xu, J. and Yang, H. and Yuan, L. and Guo, C. and Ji, X.",2017,Protection Mechanism Failure,Hybrid,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,SQL injection,Static and dynamic analysis,Experiment
Feist:2016:FNH:3015135.3015137,Finding the Needle in the Heap: Combining Static Analysis and Dynamic Symbolic Execution to Trigger Use-after-free,"Feist, Josselin and Mounier, Laurent and Bardin, S{\'e}bastien and David, Robin and Potet, Marie-Laure",2016,Improper Adherence to Coding Standards,Hybrid,Generic,Source Code,Yes,Empirical,Tool Implemented and Published,Automatic,Yes,Use-after-free vulnerabilities,Static analysis and dynamic symbolic execution,Empirical Study
7972811,CATE: Concolic Android Testing Using Java PathFinder for Android Applications,"McAfee, P. and Mkaouer, M. Wiem and Krutz, D. E.",2017,Multiple,Hybrid,Mobile Applications,Compiled Code,No,None,Tool Implemented and Published,Automatic,No,Not specified,Concolic testing,""
7965452,Exception beyond Exception: Crashing Android System by Trapping in #x0022;Uncaught Exception #x0022;,"Wu, J. and Liu, S. and Ji, S. and Yang, M. and Luo, T. and Wu, Y. and Wang, Y.",2017,Improper Check or Handling of Exceptional Conditions,Dynamic Analysis,Mobile Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,"Incorrectly implemented exception 'uncaughtException' [different from ""Incorrectly handled exception""]",Fuzzing,Empirical Study
Amira:2017:SSA:3029806.3029838,Sound and Static Analysis of Session Fixation Vulnerabilities in PHP Web Applications,"Amira, Abdelouahab and Ouadjaout, Abdelraouf and Derhab, Abdelouahid and Badache, Nadjib",2017,Improper Control of a Resource Through its Lifetime,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,Session fixation vulnerabilities,"",Empirical Study
7809826,Automatic Web Security Unit Testing: XSS Vulnerability Detection,"Mohammadi, M. and Chu, B. and Lipford, H. R. and Murphy-Hill, E.",2016,Protection Mechanism Failure,Static Analysis,Web Applications,Source Code,Yes,Empirical,No Tool Implemented,Automatic,No,Cross-site scripting,"",Empirical Study
Saeed:2016:TED:2858930.2858936,Tag-Protector: An Effective and Dynamic Detection of Out-of-bound Memory Accesses,"Saeed, Ahmed and Ahmadinia, Ali and Just, Mike",2016,Protection Mechanism Failure,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Illegal memory access,"",Empirical Study
7206620,Detecting and Removing Web Application Vulnerabilities with Static Analysis and Data Mining,"Medeiros, I. and Neves, N. and Correia, M.",2016,Multiple,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"Taint analysis, data mining",Experiment
7867765,Patch-Related Vulnerability Detection Based on Symbolic Execution,"Qiang, W. and Liao, Y. and Sun, G. and Yang, L. T. and Zou, D. and Jin, H.",2017,Improper Adherence to Coding Standards,Hybrid,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,"Buffer overflow, memory leak, uninitialized data, dangling pointer","Symbolic execution, static analysis",Experiment
7883115,Static detection of execution after redirect vulnerabilities in PHP applications,"Chai, Chuansen and Yan, Xuexiong and Wang, Qingxian and Liu, Shukai",2016,Insufficient Control Flow Management,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Execution after redirect,"",Empirical Study
Nicolay:2016:SDU:2993600.2993612,Static Detection of User-specified Security Vulnerabilities in Client-side JavaScript,"Nicolay, Jens and Spruyt, Valentijn and {De Roover}, Coen",2016,Multiple,Static Analysis,Web Applications,Source Code,No,Empirical,Tool Implemented and Published,Semi-automatic,No,User-specified security vulnerabilities,"",Empirical Study
7961531,Android Repository Mining for Detecting Publicly Accessible Functions Missing Permission Checks,"Nguyen, H. H. and Jiang, L. and Quan, T.",2017,Protection Mechanism Failure,Static Analysis,Mobile Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Permission vulnerability,"",Empirical Study
Ceccato:2016:SAS:2970276.2970343,SOFIA: An Automated Security Oracle for Black-box Testing of SQL-injection Vulnerabilities,"Ceccato, Mariano and Nguyen, Cu D. and Appelt, Dennis and Briand, Lionel C.",2016,Protection Mechanism Failure,Dynamic Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,No,SQL injection,"",Experiment
7961990,Large-Scale Analysis Detection of Authentication Cross-Site Request Forgeries,"Sudhodanan, A. and Carbone, R. and Compagna, L. and Dolgin, N. and Armando, A. and Morelli, U.",2017,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site request forgery,"",Empirical Study
Koch:2017:SDS:3092703.3092708,Semi-automated Discovery of Server-based Information Oversharing Vulnerabilities in Android Applications,"Koch, William and Chaabane, Abdelberi and Egele, Manuel and Robertson, William and Kirda, Engin",2017,Improper Control of a Resource Through its Lifetime,Hybrid,Mobile Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Semi-automatic,No,Information exposure,Static and dynamic analysis,Empirical Study
Gao:2016:CSA:2993717.2993724,Carraybound: Static Array Bounds Checking in C Programs Based on Taint Analysis,"Gao, Fengjuan and Chen, Tianjiao and Wang, Yu and Situ, Lingyun and Wang, Linzhang and Li, Xuandong",2016,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,Buffer overflow,Tainting,Experiment
8073635,On the detection and analysis of software security vulnerabilities,"Wijesiriwardana, C. and Wimalaratne, P.",2017,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Case Study
Demissie:2016:IAI:2897073.2897082,Identifying Android Inter App Communication Vulnerabilities Using Static and Dynamic Analysis,"Demissie, Biniam Fisseha and Ghio, Davide and Ceccato, Mariano and Avancini, Andrea",2016,Protection Mechanism Failure,Hybrid,Mobile Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Inter-app communication vulnerabilities,Static and dynamic analysis,Empirical Study
8009940,Detecting Cross-Site Scripting Vulnerabilities through Automated Unit Testing,"Mohammadi, M. and Chu, B. and Lipford, H. R.",2017,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,"",Empirical Study
7965276,A Solver for a Theory of Strings and Bit-Vectors,"Subramanian, S. and Berzish, M. and Tripp, O. and Ganesh, V.",2017,Protection Mechanism Failure,Formal Analysis,Desktop Applications,Source Code,No,Empirical,Tool Implemented and Published,Automatic,No,Buffer overflow,"",Empirical Study
7927989,A Search-Based Testing Approach for XML Injection Vulnerabilities in Web Applications,"Jan, S. and Nguyen, C. D. and Arcuri, A. and Briand, L.",2017,Improper Enforcement of Message or Data Structure,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,XML injection,"",Case Study
7972813,M-Perm: A Lightweight Detector for Android Permission Gaps,"Chester, P. and Jones, C. and Mkaouer, M. Wiem and Krutz, D. E.",2017,Protection Mechanism Failure,Hybrid,Mobile Applications,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,No,Permission vulnerability,Static and dynamic analysis,Empirical Study
Lee:2017:SIS:3097368.3097406,A SEALANT for Inter-app Security Holes in Android,"Lee, Youn Kyu and Bang, Jae young and Safi, Gholamreza and Shahbazian, Arman and Zhao, Yixue and Medvidovic, Nenad",2017,Protection Mechanism Failure,Hybrid,Mobile Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,No,Inter-app communication vulnerabilities,Static and dynamic analysis,Empirical Study
7774522,SV-AF #x2014; A Security Vulnerability Analysis Framework,"Alqahtani, S. S. and Eghan, E. E. and Rilling, J.",2016,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Case Study
Duan:2017:IOL:3133956.3134048,Identifying Open-Source License Violation and 1-day Security Risk at Large Scale,"Duan, Ruian and Bijlani, Ashish and Xu, Meng and Kim, Taesoo and Lee, Wenke",2017,Multiple,Static Analysis,Mobile Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,Yes,Not specified,"",Empirical Study
7835996,An user configurable clang static analyzer taint checker,"Arroyo, M. and Chiotta, F. and Bavera, F.",2016,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,Tainting,Empirical Study
Petsios:2017:SAD:3133956.3134073,SlowFuzz: Automated Domain-Independent Detection of Algorithmic Complexity Vulnerabilities,"Petsios, Theofilos and Zhao, Jason and Keromytis, Angelos D. and Jana, Suman",2017,Improper Control of a Resource Through its Lifetime,Dynamic Analysis,Generic,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Algorithmic complexity vulnerability,Search-based algorithms,Empirical Study
7726173,Detecting Buffer Boundary Violations Based on SVM,"Meng, Q. and Zhang, B. and Feng, C. and Tang, C.",2016,Protection Mechanism Failure,Static Analysis,Generic,Source Code,No,Formal,Tool Implemented but Not Published,Automatic,No,Buffer overflow,Symbolic execution,Proof
Tsutano:2017:ERS:3097368.3097407,"An Efficient, Robust, and Scalable Approach for Analyzing Interacting Android Apps","Tsutano, Yutaka and Bachala, Shakthi and Srisa-an, Witawas and Rothermel, Gregg and Dinh, Jackson",2017,Protection Mechanism Failure,Dynamic Analysis,Mobile Applications,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,No,Inter-app communication vulnerabilities,"",Empirical Study
8026953,A Mining Approach to Obtain the Software Vulnerability Characteristics,"Li, X. and Chen, J. and Lin, Z. and Zhang, L. and Wang, Z. and Zhou, M. and Xie, W.",2017,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Data mining,Empirical Study
Chen:2017:PV:3052973.3053033,Pinpointing Vulnerabilities,"Chen, Yue and Khandaker, Mustakimur and Wang, Zhi",2017,Protection Mechanism Failure,Dynamic Analysis,Desktop Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Experiment
BenJaballah:2016:GAD:2995959.2995966,A Grey-Box Approach for Detecting Malicious User Interactions in Web Applications,"{Ben Jaballah}, Wafa and Kheir, Nizar",2016,Multiple,Hybrid,Web Applications,Source Code,No,Formal,Tool Implemented but Not Published,Semi-automatic,No,Not specified,Static and dynamic analysis,Proof
Moore:2016:BOA:3015135.3015141,Buffer Overflow Attack's Power Consumption Signatures,"Moore, Samuel and Yampolskiy, Mark and Gatlin, Jacob and McDonald, Jeffrey T. and Andel, Todd R.",2016,Protection Mechanism Failure,Dynamic Analysis,Embedded Systems,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"",Empirical Study
PAP-new-10057,Investigation of taint analysis for Smartphone-implicit taint detection and privacy leakage detection,"Hou, Rui and Jin, Zhigang",2016,Improper Control of a Resource Through its Lifetime,Static Analysis,Mobile Applications,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Information exposure,Tainting,Empirical Study
Pellegrino:2017:DDC:3133956.3133959,Deemon: Detecting CSRF with Dynamic Analysis and Property Graphs,"Pellegrino, Giancarlo and Johns, Martin and Koch, Simon and Backes, Michael and Rossow, Christian",2017,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool Implemented and Published,Automatic,Yes,Cross-site request forgery,"",Experiment
Jan:2016:AET:2931037.2931042,Automated and Effective Testing of Web Services for XML Injection Attacks,"Jan, Sadeeq and Nguyen, Cu D. and Briand, Lionel C.",2016,Improper Control of a Resource Through its Lifetime,Dynamic Analysis,Web Applications,Compiled Code,Yes,Empirical,Tool ImplementedExperiment but Not Published,Automatic,No,Code injection,"",Case Study
7386711,Dynamically Discovering Likely Memory Layout to Perform Accurate Fuzzing,"Chen, K. and Zhang, Y. and Liu, P.",2016,Improper Control of a Resource Through its Lifetime,Dynamic Analysis,Generic,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Code injection,"",Empirical Study
Cheng:2016:RRA:2950290.2983961,RABIEF: Range Analysis Based Integer Error Fixing,"Cheng, Xi",2016,Protection Mechanism Failure,Static Analysis,Desktop Applications,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Integer overflow,"",Empirical Study
Li:2017:DSE:3033019.3033029,Dynamic Symbolic Execution for Polymorphism,"Li, Lian and Lu, Yi and Xue, Jingling",2017,Multiple,Static Analysis,Generic,Source Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Symbolic execution,Experiment
7985662,Search-Driven String Constraint Solving for Vulnerability Detection,"ThomÃ©, J. and Shar, L. K. and Bianculli, D. and Briand, L.",2017,Protection Mechanism Failure,Static Analysis,Generic,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,Yes,Cross-site scripting,Search-based algorithms,Experiment
7526415,Smart fuzzing method for detecting stack-based buffer overflow in binary codes,"Mouzarani, M. and Sadeghiyan, B. and Zolfaghari, M.",2016,Protection Mechanism Failure,Hybrid,Generic,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Buffer overflow,"Concolic testing, fuzzing",Empirical Study
7515929,Detecting integer overflow in Windows binary executables based on symbolic execution,"Zhang, B. and Feng, C. and Wu, B. and Tang, C.",2016,Protection Mechanism Failure,Hybrid,Desktop Applications,Compiled Code,No,Empirical,Tool Implemented but Not Published,Automatic,No,Integer overflow,Static and dynamic analysis,Empirical Study
Lekies:2017:CAW:3133956.3134091,Code-Reuse Attacks for the Web: Breaking Cross-Site Scripting Mitigations via Script Gadgets,"Lekies, Sebastian and Kotowicz, Krzysztof and Gro{\ss}, Samuel and {Vela Nava}, Eduardo A. and Johns, Martin",2017,Protection Mechanism Failure,Dynamic Analysis,Web Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Cross-site scripting,"",Empirical Study
7975723,A technique for evaluation and detection of potentially vulnerable code in Android applications,"Ferreira, R. L. D. M. and dos Santos, A. F. P. and Choren, R.",2017,Multiple,Static Analysis,Mobile Applications,Source Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,"",Experiment
8009913,WinHeap Explorer: Efficient and Transparent Heap-Based Bug Detection in Machine Code,"Shudrak, M.",2017,Incorrect Access of Indexable Resource,Hybrid,Desktop Applications,Compiled Code,No,Empirical,Tool Implemented and Published,Automatic,Yes,Heap-based buffer overflow,Static and dynamic analysis,Experiment
Li:2017:SPB:3106237.3106295,Steelix: Program-state Based Binary Fuzzing,"Li, Yuekang and Chen, Bihuan and Chandramohan, Mahinthan and Lin, Shang-Wei and Liu, Yang and Tiu, Alwen",2017,Multiple,Dynamic Analysis,Generic,Compiled Code,Yes,Empirical,Tool Implemented but Not Published,Automatic,No,Not specified,Fuzzing,Empirical Study
